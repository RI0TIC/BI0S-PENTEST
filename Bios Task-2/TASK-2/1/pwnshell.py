import socket
import base64
import codecs

def vigenere(ciphertext,key):
    key_repeated = (key * (len(ciphertext) // len(key) + 1))[:len(ciphertext)]
    ciphertext_nums = [ord(c) - 65 for c in ciphertext]
    key_nums = [ord(c) - 65 for c in key_repeated]

    decoded_nums = [(ciphertext_nums[i] - key_nums[i % len(key)]) % 26 for i in range(len(ciphertext_nums))]

    decoded_text=[]
    decoded_text.append([chr(n + 65) for n in decoded_nums])
    decoded_text[0].insert(5,' ')
    decode=''.join([i for i in decoded_text[0]])
    return (decode) 


    
    
ip = '3.110.229.92'
port = 30188

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((ip, port))



input_string1 = s.recv(1024).decode()
print(input_string1)

    
input_string=input_string1[72:]
if input_string.startswith("Decode the rot_13 encoded string:"):
    rot13_string = input_string.replace("Decode the rot_13 encoded string: ", "")  
    plaintext = codecs.decode(rot13_string, "rot13")  
elif input_string.startswith("Decode the base64 encoded string:"):
    base64_string = input_string.replace("Decode the base64 encoded string: ", "")
    plaintext = base64.b64decode(base64_string).decode()
    plaintext+='\n'
elif input_string.startswith("Decode the decimal encoded string:"):
    decimal_string = input_string[35:-1]
    plaintext = ''.join(chr(int(x)) for x in decimal_string.split())
    plaintext+='\n'
print(plaintext)
s.send(plaintext.encode())
    
input_string2 = s.recv(1024).decode()
print(input_string2)
if input_string2.startswith("Congratulations!! You have completed Stage-1."):
    string = "KOGPCBFVGS"
    keyword = "DORAEMON"
    plaintext = vigenere(string, keyword)
    plaintext+='\n'
    print(plaintext)
    s.send(plaintext.encode())
    input_string3 = s.recv(1024).decode()
    print(input_string3)
    rsa="R5A_c4n_b3_3xpl0it3d\n"
    s.send(rsa.encode())
    input_string4 = s.recv(1024).decode()
    print(input_string4)
